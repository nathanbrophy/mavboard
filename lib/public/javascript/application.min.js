/*! mavboard - v0.0.0 - 2019-04-30 */
var trackNum=0;function generateList(){window.music.mopidy.tracklist.getTracks().then(t=>{var e=document.getElementById("spotify-interative-list-container").querySelector("ul");e.innerHTML="";for(var n=0;n<t.length;n++){new interactiveListItem(t[n]).appendToContainer(e)}}),console.log(window.music.mopidy)}function volumeChanged(t){window.music.mopidy.mixer.setVolume(parseInt(t.value))}function toggleMute(t){"volume-down"==t.id?(document.getElementById("volume-mute").style.display="block",t.style.display="none",document.getElementById("music-volume-control").disabled=!0,window.music.mopidy.mixer.setMute(!0)):(document.getElementById("volume-down").style.display="block",t.style.display="none",document.getElementById("music-volume-control").disabled=!1,window.music.mopidy.mixer.setMute(!1))}function toggleConsume(t){window.music.mopidy.tracklist.getConsume().then(t=>window.music.mopidy.tracklist.setConsume(!t))}function ilistDrag(t){t.dataTransfer.setData("text",t.target.id)}function ilistDropDelete(t){t.preventDefault();var e=t.dataTransfer.getData("text"),n=document.getElementById(e),a=n.querySelector(".ilist-track-uri").innerHTML;window.music.mopidy.tracklist.remove({uri:[a]}),n.remove()}function ilistAllowDrop(t){t.preventDefault()}var interactiveListItem=function(t){trackNum++;var e=t.length,n=parseInt(e/6e4);e-=6e4*n;var a=parseInt(e/1e3);a<10&&(a="0"+a),this.trackName=t.name,this.trackLength=`${n}:${a}`,this.album=t.album.name,this.artist=t.artists[0].name,this.uri=t.uri};interactiveListItem.prototype.appendToContainer=function(t){var e=document.createElement("li");e.classList.add("interactive-track-item"),e.innerHTML=`<div class="ilist-row0">\n\t\t\t\t\t\t<p class="ilist-track-name">${this.trackName}</p>\n\t\t\t\t\t  \t<p class="ilist-track-length">${this.trackLength}</p>\n\t\t\t\t\t  \t<p class="ilist-track-uri" style="display:none;">${this.uri}</p>\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div class="ilist-row1">\n\t\t\t\t\t\t  <p class="ilist-track-artist">${this.artist}</p>\n\t\t\t\t\t\t  <p>|</p>\n\t\t\t\t\t\t  <p class="ilist-track-album">${this.album}</p>\n\t\t\t\t\t  </div>`,e.draggable=!0,e.ondragstart=ilistDrag,e.id=`interactive-track-item-${trackNum}`,t.appendChild(e)};var currentTime,totalTime,paused,intervalfn,$=t=>{var e=null;try{e=document.getElementById(t)}catch(t){console.log(t)}return e},$$=t=>{var e=null;try{e=document.getElementsByClassName(t)}catch(t){console.log(t)}return e};function displayAllTimes(){var t=$("transit-marquee");[16325,56001,56043].forEach(e=>{refreshTransitTimes(e,t),setInterval(()=>{t.innerHTML="",refreshTransitTimes(e,t)},6e4)})}function refreshTransitTimes(t,e){console.log("Stop ID: ",t);var n=new XMLHttpRequest;n.onreadystatechange=(()=>{if(4==n.readyState&&200==n.status){for(var a=[],i=n.responseXML.getElementsByTagName("NexTripDeparture"),r=`<div class="transit-item-wrapper"><li class="transit_stop" id=stop-${t}><p>\n                        Stop ID: ${t}\n                     </p></li>`,s=0;s<i.length;s++){var l=i[s].getElementsByTagName("Route")[0];l=l.innerHTML,a.includes(l)||(r+=generateDepartureLi(i[s]),a.push(l))}r+="</div>",e.innerHTML+=r}});var a="http://svc.metrotransit.org/NexTrip/"+t;n.open("GET",a,!0),n.send()}function generateDepartureLi(t){var e="";try{var n=t.getElementsByTagName("Route"),a=t.getElementsByTagName("RouteDirection"),i=t.getElementsByTagName("DepartureText"),r=t.getElementsByTagName("Description"),s=null!=n?n[0].innerHTML:"No Route",l=null!=a?a[0].innerHTML:"No Route Direction",o=null!=i?i[0].innerHTML:"No Departure Time",c=null!=r?r[0].innerHTML:"No Description";e+='<li class="dep_trans"><p>',e+=s+" ",e+=l,e+="</p></li>",e+='<li class="dep_desc"><p>'+c+"</p></li>",o.includes("Min")?e+='<li class="dep_time"><p>Next in: '+o+" </p></li>":e+='<li class="dep_time"><p>Next at: '+o+"</p></li>"}catch(t){console.log(t)}return e}function searchSpotify(t){t.preventDefault();var e=document.getElementById("search-results-list"),n=document.getElementById("query").value;window.music.mopidy.library.search({any:n}).then(t=>{for(var n,a=0;a<t.length;a++)t[a].tracks&&(n=t[a]);var i=n.tracks;e.innerHTML="";for(a=0;a<i.length;a++){var r=i[a],s=document.createElement("li");s.classList.add("interactive-track-item"),s.innerHTML=`<div class="ilist-row0 search-result">\n\t\t\t\t\t\t\t\t<p class="ilist-track-name">${r.name}</p>\n\t\t\t\t\t\t\t  \t<p class="ilist-track-uri" style="display:none;" id='uri?${a}'>${r.uri}</p>\n\t\t\t\t\t\t\t  \t<a class='search-item-options' id='play?${a}' onclick='playTrack(this, false)'>Play</a>\n\t\t\t\t\t\t\t  \t<a class='search-item-options' id='playnext?${a}' onclick='playTrack(this, true)'>Play Next</a>\n\t\t\t\t\t\t\t  \t<a class='search-item-options' id='addqueue?${a}' onclick='addTrackToQueue(this)'>Add to Queue</a>\n\t\t\t\t\t\t\t  \t<a class='search-item-options' id='copyuri?${a}' onclick='copyTrackURI(this)'>Copy URI</a>\n\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t  <div class="ilist-row1 search-result">\n\t\t\t\t\t\t\t\t  <p class="ilist-track-artist">${r.artists[0].name}</p>\n\t\t\t\t\t\t\t\t  <p>|</p>\n\t\t\t\t\t\t\t\t  <p class="ilist-track-album">${r.album.name}</p>\n\t\t\t\t\t\t\t  </div>`,s.id="track-list-item-"+a,e.appendChild(s)}})}function playTrack(t,e){var n=t.id,a=e?n.replace("playnext","uri"):n.replace("play","uri"),i=document.getElementById(a).innerHTML;window.music.mopidy.tracklist.add(null,1,i),e||(window.music.mopidy.playback.next(),window.music.mopidy.play())}function addTrackToQueue(t){var e=t.id.replace("addqueue","uri"),n=document.getElementById(e).innerHTML;window.music.mopidy.tracklist.getLength().then(t=>{window.music.mopidy.tracklist.add(null,t,n)})}function copyTrackURI(t){var e=t.id.replace("copyuri","uri"),n=document.getElementById(e).innerHTML,a=document.getElementById("copy-to-ckipboard");a.value=n,a.select(),document.execCommand("copy")}var xmlH=new XMLHttpRequest;xmlH.onreadystatechange=function(){if(4==xmlH.readyState&&200==xmlH.status){var t=JSON.parse(xmlH.responseText);currentTime=parseInt(t.curr),totalTime=parseInt(t.total),updateTimeBar(),intervalfn=setInterval(function(){paused||(currentTime++,updateTimeBar())},1e3)}},xmlH.open("GET","/currentTime",!0),xmlH.send();class SpotifyController{constructor(){this.rpcURL="http://192.168.140.99:6680/mopidy/rpc",this.wsURL="ws://192.168.140.99:6680/mopidy/ws",this.initMopidy().then(t=>{this.mopidy=t;const e=new Event("spotifyready"),n=document.querySelector(".spotify");n?n.dispatchEvent(e):console.error("Unable to bind to mopdiy div")}),this.state={online:!1,currentTrack:{},nextTracks:{},previousTrack:{}}}initMopidy(){return new Promise((t,e)=>{const n=new Mopidy({autoConnect:!0,webSocketUrl:this.wsURL});n.on(this.syncState);try{n.on("state:online",()=>{if(this.state.online=!0,!window.playlist){n.tracklist.setConsume(!0);var e=document.getElementById("consume-toggle");e&&!e.classList.contains("on")&&e.classList.add("on");var a=document.getElementById("music-volume-control").value;n.mixer.setVolume(parseInt(a)),n.playback.getCurrentTrack().then(t=>{this.state.currentTrack=t,this.state.currentTrack?(console.log(`Currently playing ${this.state.currentTrack.name} by ${this.state.currentTrack.artists[0].name}`),n.library.getImages([t.uri]).then(e=>updateCoverArt(t.uri,e))):n.playlists.getPlaylists().then(function(t){var e;console.log("Loading playlist");for(var a=0;a<t.length;a++)"MSP Fall 2018"==t[a].name&&(e=t[a]);if(null!=e){for(var i,r,s=e.tracks.length;0!=s;)r=Math.floor(Math.random()*s),s-=1,i=e.tracks[s],e.tracks[s]=e.tracks[r],e.tracks[r]=i;n.tracklist.add(e.tracks).then(function(t){n.playback.play(t[0]).then(function(){console.log("Loaded the playlist.")})})}}).done()}),n.playback.getCurrentTrack().then(t=>{this.state.currentTrack=t,this.state.currentTrack?(console.log(`Currently playing ${this.state.currentTrack.name} by ${this.state.currentTrack.artists[0].name}`),document.getElementById("currSong").innerHTML=t.name+" -- "+t.artists[0].name,n.library.getImages([t.uri]).then(e=>updateCoverArt(t.uri,e))):console.log("No track currently playing")})}t(n)})}catch(t){e(t)}})}sptPlay(){this.state.online&&this.mopidy.playback.play()}sptPause(){this.state.online&&this.mopidy.playback.pause()}sptPreviousTrack(){this.state.online&&this.mopidy.playback.previous()}sptNextTrack(){this.state.online&&this.mopidy.playback.next()}syncState(t){switch(console.log("event: ",t),t){case"state:online":window.music.state.online=!0;break;case"state:offline":case"reconnectionPending":case"reconnecting":window.music.state.online=!1;break;case"event:trackPlaybackStarted":window.music.mopidy.playback.getCurrentTrack().then(t=>{window.music.state.currentTrack=t,console.log("currently playling: ",t),intervalfn&&clearInterval(intervalfn),totalTime=parseInt(t.length/1e3),currentTime=0,updateTimeBar(),intervalfn=setInterval(function(){paused||(currentTime++,updateTimeBar())},1e3),document.getElementById("currSong").innerHTML=t.name+" -- "+t.artists[0].name,window.music.mopidy.library.getImages([t.uri]).then(e=>updateCoverArt(t.uri,e))});break;case"event:trackPlaybackResumed":paused=!1;break;case"event:trackPlaybackPaused":paused=!0;break;case"event:volumeChanged":console.log("Volume changed");break;case"event:tracklistChanged":console.log("");break;case"event:optionsChanged":window.music.mopidy.tracklist.getConsume().then(t=>{t?(document.getElementById("consume-toggle").classList.remove("off"),document.getElementById("consume-toggle").classList.add("on")):(document.getElementById("consume-toggle").classList.remove("on"),document.getElementById("consume-toggle").classList.add("off"))})}}}function updateCoverArt(t,e){const[n]=e[t];var a=document.getElementById("current-track-image");a.setAttribute("src",n.uri),a.setAttribute("height",n.height+"px"),a.setAttribute("width",n.width+"px")}function updateTimeBar(){var t,e=currentTime,n=parseInt(e/60),a=e=e-60*n;a<=9&&(a="0"+a),t=`${n}:${a}`,document.getElementById("current-time").innerHTML=t;var i;e=totalTime,(a=e-=60*(n=parseInt(e/60)))<=9&&(a="0"+a),i=`${n}:${a}`,document.getElementById("total-time").innerHTML=i;var r=currentTime/totalTime*100;document.getElementById("time-bar").style.width=r+"%"}window.music=new SpotifyController;var currSlide=1;function displayWeather(){var t=new XMLHttpRequest;t.onreadystatechange=function(){if(4==t.readyState&&200==t.status){const a=JSON.parse(t.responseText).properties.periods;for(var e=0;e<a.length;e++){var n=document.createElement("div");n.classList.add("fade"),n.classList.add("slides"),n.innerHTML=buildDynamicWeatherFull(a[e]),document.getElementById("weather-wrapper").appendChild(n)}document.getElementsByClassName("slides")[0].style.display="block",setInterval(slideShow,1e4)}else console.log(`Errored on ready state ${t.readyState} with status code ${t.status}`)},t.open("GET","https://api.weather.gov/gridpoints/MPX/108,71/forecast",!0),t.send()}function slideShow(){for(var t=document.getElementsByClassName("slides"),e=0;e<t.length;e++)t[e].style.display="none";t[currSlide].style.display="block",++currSlide>=t.length&&(currSlide=0)}function getWeatherDirectionUnicode(t){return"N"===t?"&uarr;":"S"===t?"&darr;":"E"===t?"&rarr;":"W"===t?"&larr;":t.includes("NW")?"&#8598;":t.includes("NE")?"&#8599;":t.includes("SW")?"&#8601;":"&#8600;"}function buildDynamicWeatherFull(t){var e=new Date(t.startTime),n=getWeatherDirectionUnicode(t.windDirection);return`<div class="weather-item-full">\n\t\t\t\t\t<p>${t.name} ${e.getMonth()+1}/${e.getDate()}</p>\n\t\t\t\t\t<p>${t.shortForecast}</p>\n\t\t\t\t\t<img src="${t.icon}" alt="weather icon ${t.number}">\n\t\t\t\t\t<p>Feels Like ${t.temperature} &#186;${t.temperatureUnit}</p>\n\t\t\t\t\t<p>Wind ${t.windSpeed} ${n}</p>\n\t\t\t\t</div>`}